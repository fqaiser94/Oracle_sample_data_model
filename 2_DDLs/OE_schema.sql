-- Delete all FKs
-- while(exists(select 1 from INFORMATION_SCHEMA.TABLE_CONSTRAINTS where CONSTRAINT_TYPE='FOREIGN KEY'))
-- begin
-- 	declare @sql nvarchar(2000)
-- 	SELECT TOP 1 @sql=('ALTER TABLE ' + TABLE_SCHEMA + '.[' + TABLE_NAME
-- 	+ '] DROP CONSTRAINT [' + CONSTRAINT_NAME + ']')
-- 	FROM information_schema.table_constraints
-- 	WHERE CONSTRAINT_TYPE = 'FOREIGN KEY'
-- 	exec (@sql)
-- end
-- ;


-- Delete all tables
-- EXEC sp_MSforeachtable @command1 = "DROP TABLE ?"
-- ;





CREATE TABLE CUSTOMERS
    (
     CUSTOMER_ID INT   NOT NULL ,
     CUST_FIRST_NAME VARCHAR (20)  NOT NULL ,
     CUST_LAST_NAME VARCHAR (20)  NOT NULL ,
     CUST_ADDRESS VARCHAR (20)  NOT NULL ,
     PHONE_NUMBERS VARCHAR (20)  NOT NULL ,
     NLS_LANGUAGE VARCHAR (3) ,
     NLS_TERRITORY VARCHAR (30) ,
     CREDIT_LIMIT DECIMAL (9,2) ,
     CUST_EMAIL VARCHAR (30) ,
     ACCOUNT_MGR_ID INT  ,
     CUST_GEO_LOCATION DECIMAL(38,0) ,
     DATE_OF_BIRTH DATETIME ,
     MARITAL_STATUS VARCHAR (20) ,
     GENDER VARCHAR (1) ,
     INCOME_LEVEL VARCHAR (20)
    )
;

ALTER TABLE CUSTOMERS
    ADD CONSTRAINT CUSTOMER_ID_MIN
    CHECK ( customer_id > 0)
;

ALTER TABLE CUSTOMERS
    ADD CONSTRAINT CUSTOMER_CREDIT_LIMIT_MAX
    CHECK ( credit_limit <= 5000)
;

CREATE INDEX CUST_ACCOUNT_MANAGER_IX ON CUSTOMERS
    (
     ACCOUNT_MGR_ID ASC
    )
;
CREATE INDEX CUST_LNAME_IX ON CUSTOMERS
    (
     CUST_LAST_NAME ASC
    )
;
CREATE INDEX CUST_EMAIL_IX ON CUSTOMERS
    (
     CUST_EMAIL ASC
    )
;

ALTER TABLE CUSTOMERS
    ADD CONSTRAINT CUSTOMERS_PK PRIMARY KEY ( CUSTOMER_ID ) ;

CREATE TABLE INVENTORIES
    (
     PRODUCT_ID INT   NOT NULL ,
     WAREHOUSE_ID SMALLINT   NOT NULL ,
     QUANTITY_ON_HAND INT   NOT NULL
    )
;

CREATE INDEX INVENTORY_IX ON INVENTORIES
    (
     WAREHOUSE_ID ASC ,
     PRODUCT_ID ASC
    )
;
CREATE INDEX INV_PRODUCT_IX ON INVENTORIES
    (
     PRODUCT_ID ASC
    )
;

ALTER TABLE INVENTORIES
    ADD CONSTRAINT INVENTORY_PK PRIMARY KEY ( PRODUCT_ID, WAREHOUSE_ID ) ;





CREATE TABLE ORDERS
    (
     ORDER_ID BIGINT   NOT NULL ,
     ORDER_DATE DATETIMEOFFSET(6)  NOT NULL ,
     ORDER_MODE VARCHAR (8) ,
     CUSTOMER_ID INT   NOT NULL ,
     ORDER_STATUS SMALLINT  ,
     ORDER_TOTAL DECIMAL (8,2) ,
     SALES_REP_ID INT  ,
     PROMOTION_ID INT
    )
;

ALTER TABLE ORDERS
    ADD CONSTRAINT ORDER_MODE_LOV
    CHECK ( order_mode in ('direct','online'))
;

ALTER TABLE ORDERS
    ADD CONSTRAINT ORDER_TOTAL_MIN
    CHECK ( order_total >= 0)
;

CREATE INDEX ORD_SALES_REP_IX ON ORDERS
    (
     SALES_REP_ID ASC
    )
;
CREATE INDEX ORD_CUSTOMER_IX ON ORDERS
    (
     CUSTOMER_ID ASC
    )
;
CREATE INDEX ORD_ORDER_DATE_IX ON ORDERS
    (
     ORDER_DATE ASC
    )
;

ALTER TABLE ORDERS
    ADD CONSTRAINT ORDER_PK PRIMARY KEY ( ORDER_ID ) ;





CREATE TABLE ORDER_ITEMS
    (
     ORDER_ID BIGINT   NOT NULL ,
     LINE_ITEM_ID SMALLINT   NOT NULL ,
     PRODUCT_ID INT   NOT NULL ,
     UNIT_PRICE DECIMAL (8,2) ,
     QUANTITY INT
    )

CREATE UNIQUE INDEX ORDER_ITEMS_UK ON ORDER_ITEMS
    (
     ORDER_ID ASC ,
     PRODUCT_ID ASC
    )
;
CREATE INDEX ITEM_ORDER_IX ON ORDER_ITEMS
    (
     ORDER_ID ASC
    )
;
CREATE INDEX ITEM_PRODUCT_IX ON ORDER_ITEMS
    (
     PRODUCT_ID ASC
    )
;

ALTER TABLE ORDER_ITEMS
    ADD CONSTRAINT ORDER_ITEMS_PK PRIMARY KEY ( ORDER_ID, LINE_ITEM_ID ) ;





CREATE TABLE PRODUCT_DESCRIPTIONS
    (
     PRODUCT_ID INT   NOT NULL ,
     LANGUAGE_ID VARCHAR (3)  NOT NULL ,
     TRANSLATED_NAME NVARCHAR (50)  NOT NULL ,
     TRANSLATED_DESCRIPTION NVARCHAR (2000)  NOT NULL
    )
;

CREATE UNIQUE INDEX PRD_DESC_PK ON PRODUCT_DESCRIPTIONS
    (
     PRODUCT_ID ASC ,
     LANGUAGE_ID ASC
    )
;

CREATE INDEX PROD_NAME_IX ON PRODUCT_DESCRIPTIONS
    (
     TRANSLATED_NAME ASC
    )
;

ALTER TABLE PRODUCT_DESCRIPTIONS
    ADD CONSTRAINT PRODUCT_DESCRIPTIONS_PK PRIMARY KEY ( PRODUCT_ID, LANGUAGE_ID ) ;





CREATE TABLE PRODUCT_INFORMATION
    (
     PRODUCT_ID INT   NOT NULL ,
     PRODUCT_NAME VARCHAR (50) ,
     PRODUCT_DESCRIPTION VARCHAR (2000) ,
     CATEGORY_ID SMALLINT  ,
     WEIGHT_CLASS SMALLINT  ,
     WARRANTY_PERIOD VARCHAR(30) ,
     SUPPLIER_ID INT  ,
     PRODUCT_STATUS VARCHAR (20) ,
     LIST_PRICE DECIMAL (8,2) ,
     MIN_PRICE DECIMAL (8,2) ,
     CATALOG_URL VARCHAR (50)
    )
;

ALTER TABLE PRODUCT_INFORMATION
    ADD CONSTRAINT PRODUCT_STATUS_LOV
    CHECK ( product_status in ('orderable','planned','under development','obsolete'))
;

CREATE INDEX PROD_SUPPLIER_IX ON PRODUCT_INFORMATION
    (
     SUPPLIER_ID ASC
    )
;

ALTER TABLE PRODUCT_INFORMATION
    ADD CONSTRAINT PRODUCT_INFORMATION_PK PRIMARY KEY ( PRODUCT_ID ) ;





CREATE TABLE WAREHOUSES
    (
     WAREHOUSE_ID SMALLINT   NOT NULL ,
     WAREHOUSE_SPEC XML ,
     WAREHOUSE_NAME VARCHAR (35) ,
     LOCATION_ID SMALLINT  ,
     WH_GEO_LOCATION DECIMAL(38,0)
    )
;

CREATE INDEX WHS_LOCATION_IX ON WAREHOUSES
    (
     LOCATION_ID ASC
    )
;

ALTER TABLE WAREHOUSES
    ADD CONSTRAINT WAREHOUSES_PK PRIMARY KEY ( WAREHOUSE_ID )
;

ALTER TABLE WAREHOUSES
    ADD CONSTRAINT LOCATIONS_WAREHOUSES_FK FOREIGN KEY
    (
     LOCATION_ID
    )
    REFERENCES LOCATIONS
    (
     LOCATION_ID
    )
;

ALTER TABLE INVENTORIES
    ADD CONSTRAINT INVENTORIES_PRODUCT_ID_FK FOREIGN KEY
    (
     PRODUCT_ID
    )
    REFERENCES PRODUCT_INFORMATION
    (
     PRODUCT_ID
    )
;

ALTER TABLE INVENTORIES
    ADD CONSTRAINT INVENTORIES_WAREHOUSES_FK FOREIGN KEY
    (
     WAREHOUSE_ID
    )
    REFERENCES WAREHOUSES
    (
     WAREHOUSE_ID
    )
;

ALTER TABLE ORDERS
    ADD CONSTRAINT ORDERS_CUSTOMER_ID_FK FOREIGN KEY
    (
     CUSTOMER_ID
    )
    REFERENCES CUSTOMERS
    (
     CUSTOMER_ID
    )
;

ALTER TABLE ORDERS
    ADD CONSTRAINT ORDERS_EMPLOYEE_ID_FK FOREIGN KEY
    (
     SALES_REP_ID
    )
    REFERENCES EMPLOYEES
    (
     EMPLOYEE_ID
    )
;

ALTER TABLE CUSTOMERS
    ADD CONSTRAINT CUSTOMERS_EMPLOYEE_ID_FK FOREIGN KEY
    (
     ACCOUNT_MGR_ID
    )
    REFERENCES EMPLOYEES
    (
     EMPLOYEE_ID
    )
;

ALTER TABLE ORDER_ITEMS
    ADD CONSTRAINT ORDER_ITEMS_ORDER_ID_FK FOREIGN KEY
    (
     ORDER_ID
    )
    REFERENCES ORDERS
    (
     ORDER_ID
    )
;


ALTER TABLE ORDER_ITEMS
    ADD CONSTRAINT ORDER_ITEMS_PRODUCT_ID_FK FOREIGN KEY
    (
     PRODUCT_ID
    )
    REFERENCES PRODUCT_INFORMATION
    (
     PRODUCT_ID
    )
;

ALTER TABLE PRODUCT_DESCRIPTIONS
    ADD CONSTRAINT PD_PRODUCT_ID_FK FOREIGN KEY
    (
     PRODUCT_ID
    )
    REFERENCES PRODUCT_INFORMATION
    (
     PRODUCT_ID
    )
;
